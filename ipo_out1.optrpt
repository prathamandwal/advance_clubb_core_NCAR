
Begin optimization report for: KERNEL_DRIVER

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at kernel_driver.f90(92,12) inlined into kernel_driver.f90(46,21)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: GRID_CLASS::KGEN_READ_REAL_CORE_RKND_DIM2_PTR

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at grid_class.F90(291,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at grid_class.F90(291,21)
      remark #25401: memcopy(with guard) generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at grid_class.F90(291,21)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at grid_class.F90(291,21)
      <Multiversioned v2>
         remark #15388: vectorization support: reference 399 has aligned access
         remark #15389: vectorization support: reference var has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 2.250 
         remark #15478: estimated potential speedup: 1.720 
         remark #15479: lightweight vector operations: 2 
         remark #15480: medium-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at grid_class.F90(291,21)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at grid_class.F90(291,44)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at grid_class.F90(291,44)
   <Peeled>
   LOOP END

   LOOP BEGIN at grid_class.F90(291,44)
      remark #15388: vectorization support: reference var has aligned access
      remark #15389: vectorization support: reference 399 has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.250 
      remark #15478: estimated potential speedup: 3.000 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at grid_class.F90(291,44)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at grid_class.F90(291,44)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at grid_class.F90(291,44)
   <Peeled>
   LOOP END

   LOOP BEGIN at grid_class.F90(291,44)
      remark #15388: vectorization support: reference 399 has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.560 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at grid_class.F90(291,44)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at grid_class.F90(293,25)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at grid_class.F90(293,25)
   <Peeled>
   LOOP END

   LOOP BEGIN at grid_class.F90(293,25)
      remark #15388: vectorization support: reference 426 has aligned access
      remark #15389: vectorization support: reference var has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.250 
      remark #15478: estimated potential speedup: 1.720 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at grid_class.F90(293,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at grid_class.F90(293,25)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at grid_class.F90(293,25)
   <Peeled>
   LOOP END

   LOOP BEGIN at grid_class.F90(293,25)
      remark #15388: vectorization support: reference 426 has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15460: masked strided loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 2 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at grid_class.F90(293,25)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: GRID_CLASS::KGEN_READ_REAL_CORE_RKND_DIM1_PTR

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at grid_class.F90(264,21)
   remark #25401: memcopy(with guard) generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at grid_class.F90(264,21)
   <Multiversioned v2>
      remark #15388: vectorization support: reference 295 has aligned access
      remark #15389: vectorization support: reference var has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.250 
      remark #15478: estimated potential speedup: 1.760 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at grid_class.F90(264,21)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at grid_class.F90(264,44)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15389: vectorization support: reference var has unaligned access
   remark #15388: vectorization support: reference 295 has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.750 
   remark #15478: estimated potential speedup: 1.440 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at grid_class.F90(264,44)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at grid_class.F90(264,44)
<Multiversioned v2>
   remark #15388: vectorization support: reference 295 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.590 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at grid_class.F90(264,44)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at grid_class.F90(266,25)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15388: vectorization support: reference 318 has aligned access
   remark #15389: vectorization support: reference var has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.250 
   remark #15478: estimated potential speedup: 1.760 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at grid_class.F90(266,25)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at grid_class.F90(266,25)
<Multiversioned v2>
   remark #15388: vectorization support: reference 318 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at grid_class.F90(266,25)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: KGEN_READ_EXTERNS_VARIABLES_DIAGNOSTIC_MODULE

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at variables_diagnostic_module.F90(250,21) inlined into variables_diagnostic_module.F90(353,18)
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE^KGEN_READ_PDF_PARAMETER cannot be vectorized   [ variables_diagnostic_module.F90(254,34) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: CLUBB_TEND_CAM

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at clubb_intr.F90(760,21) inlined into clubb_intr.F90(523,26)
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE^KGEN_READ_PDF_PARAMETER cannot be vectorized   [ clubb_intr.F90(764,34) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at clubb_intr.F90(760,21) inlined into clubb_intr.F90(557,26)
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE^KGEN_READ_PDF_PARAMETER cannot be vectorized   [ clubb_intr.F90(764,34) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at clubb_intr.F90(926,17) inlined into clubb_intr.F90(610,26)
   remark #15382: vectorization support: call to function KGEN_INIT_CHECK..0 cannot be vectorized   [ pdf_parameter_module.F90(237,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(238,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(239,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(240,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(241,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(242,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(243,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(244,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(245,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(246,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(247,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(248,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(249,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(250,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(251,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(252,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(253,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(254,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(255,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(256,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(257,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(258,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(259,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(260,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(261,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(262,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(263,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(264,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(265,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(266,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(267,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(268,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(269,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(270,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(271,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(272,18) ]
   remark #15382: vectorization support: call to function PDF_PARAMETER_MODULE::KGEN_VERIFY_REAL_CORE_RKND cannot be vectorized   [ pdf_parameter_module.F90(273,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between pdf_params line 927 and 1 line 273
   remark #15346: vector dependence: assumed FLOW dependence between 1 line 273 and pdf_params line 927
LOOP END

LOOP BEGIN at clubb_intr.F90(613,21)
   remark #15382: vectorization support: call to function ADVANCE_CLUBB_CORE cannot be vectorized   [ clubb_intr.F90(614,26) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: CLUBB_INTR::CLUBB_TEND_CAM:KGEN_VERIFY_REAL_R8_DIM2

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at clubb_intr.F90(843,22)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at clubb_intr.F90(843,22)
   <Peeled>
   LOOP END

   LOOP BEGIN at clubb_intr.F90(843,22)
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 20 
      remark #15477: vector loop cost: 15.500 
      remark #15478: estimated potential speedup: 2.110 
      remark #15479: lightweight vector operations: 14 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=4
   LOOP END

   LOOP BEGIN at clubb_intr.F90(843,22)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at clubb_intr.F90(851,30)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at clubb_intr.F90(851,30)
   <Peeled>
   LOOP END

   LOOP BEGIN at clubb_intr.F90(851,30)
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 20 
      remark #15477: vector loop cost: 12.500 
      remark #15478: estimated potential speedup: 2.520 
      remark #15479: lightweight vector operations: 15 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=4
   LOOP END

   LOOP BEGIN at clubb_intr.F90(851,30)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at clubb_intr.F90(861,25)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at clubb_intr.F90(861,25)
   <Peeled>
   LOOP END

   LOOP BEGIN at clubb_intr.F90(861,25)
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 21 
      remark #15477: vector loop cost: 11.000 
      remark #15478: estimated potential speedup: 3.300 
      remark #15479: lightweight vector operations: 9 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=4
   LOOP END

   LOOP BEGIN at clubb_intr.F90(861,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at clubb_intr.F90(862,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at clubb_intr.F90(862,21)
      remark #15389: vectorization support: reference 2468 has unaligned access
      remark #15389: vectorization support: reference 2468 has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 26 
      remark #15477: vector loop cost: 7.870 
      remark #15478: estimated potential speedup: 2.900 
      remark #15479: lightweight vector operations: 14 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=2
   LOOP END

   LOOP BEGIN at clubb_intr.F90(862,21)
   <Remainder>
      remark #25436: completely unrolled by 1  
   LOOP END
LOOP END

LOOP BEGIN at clubb_intr.F90(863,25)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at clubb_intr.F90(863,25)
   <Peeled>
   LOOP END

   LOOP BEGIN at clubb_intr.F90(863,25)
      remark #15389: vectorization support: reference var has unaligned access   [ clubb_intr.F90(863,56) ]
      remark #15389: vectorization support: reference ref_var has unaligned access   [ clubb_intr.F90(863,56) ]
      remark #15389: vectorization support: reference ref_var has unaligned access   [ clubb_intr.F90(863,56) ]
      remark #15389: vectorization support: reference _44 has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 3 
      remark #15457: masked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 39 
      remark #15477: vector loop cost: 19.000 
      remark #15478: estimated potential speedup: 1.920 
      remark #15479: lightweight vector operations: 23 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=8
   LOOP END

   LOOP BEGIN at clubb_intr.F90(863,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at clubb_intr.F90(864,25)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at clubb_intr.F90(864,25)
   <Peeled>
   LOOP END

   LOOP BEGIN at clubb_intr.F90(864,25)
      remark #15389: vectorization support: reference var has unaligned access   [ clubb_intr.F90(864,46) ]
      remark #15389: vectorization support: reference ref_var has unaligned access   [ clubb_intr.F90(864,46) ]
      remark #15389: vectorization support: reference _44 has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 2 
      remark #15457: masked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 25 
      remark #15477: vector loop cost: 19.500 
      remark #15478: estimated potential speedup: 2.300 
      remark #15479: lightweight vector operations: 20 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=4
   LOOP END

   LOOP BEGIN at clubb_intr.F90(864,25)
   <Remainder>
      remark #15389: vectorization support: reference var has unaligned access   [ clubb_intr.F90(864,46) ]
      remark #15389: vectorization support: reference ref_var has unaligned access   [ clubb_intr.F90(864,46) ]
      remark #15388: vectorization support: reference _44 has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at clubb_intr.F90(864,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at clubb_intr.F90(866,25)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at clubb_intr.F90(866,25)
   <Peeled>
   LOOP END

   LOOP BEGIN at clubb_intr.F90(866,25)
      remark #15389: vectorization support: reference var has unaligned access   [ clubb_intr.F90(866,46) ]
      remark #15389: vectorization support: reference ref_var has unaligned access   [ clubb_intr.F90(866,46) ]
      remark #15389: vectorization support: reference _44 has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 2 
      remark #15457: masked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 26 
      remark #15477: vector loop cost: 19.500 
      remark #15478: estimated potential speedup: 2.380 
      remark #15479: lightweight vector operations: 20 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=4
   LOOP END

   LOOP BEGIN at clubb_intr.F90(866,25)
   <Remainder>
      remark #15389: vectorization support: reference var has unaligned access   [ clubb_intr.F90(866,46) ]
      remark #15389: vectorization support: reference ref_var has unaligned access   [ clubb_intr.F90(866,46) ]
      remark #15388: vectorization support: reference _44 has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at clubb_intr.F90(866,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at clubb_intr.F90(867,25)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at clubb_intr.F90(867,25)
   <Peeled>
   LOOP END

   LOOP BEGIN at clubb_intr.F90(867,25)
      remark #15388: vectorization support: reference _44 has aligned access
      remark #15389: vectorization support: reference _44 has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15455: masked aligned unit stride stores: 1 
      remark #15456: masked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 22 
      remark #15477: vector loop cost: 5.500 
      remark #15478: estimated potential speedup: 3.810 
      remark #15479: lightweight vector operations: 12 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at clubb_intr.F90(867,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at clubb_intr.F90(869,37)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model

   LOOP BEGIN at clubb_intr.F90(869,37)
      remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at clubb_intr.F90(869,37)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at clubb_intr.F90(870,36)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model

   LOOP BEGIN at clubb_intr.F90(870,36)
      remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at clubb_intr.F90(870,36)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at clubb_intr.F90(875,36)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at clubb_intr.F90(875,36)
   <Peeled>
   LOOP END

   LOOP BEGIN at clubb_intr.F90(875,36)
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 21 
      remark #15477: vector loop cost: 11.000 
      remark #15478: estimated potential speedup: 3.300 
      remark #15479: lightweight vector operations: 9 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=4
   LOOP END

   LOOP BEGIN at clubb_intr.F90(875,36)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at clubb_intr.F90(877,61)
   remark #25420: Collapsed with loop at line 877 
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
   remark #25439: unrolled with remainder by 2  

   LOOP BEGIN at clubb_intr.F90(877,61)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at clubb_intr.F90(877,61)
<Remainder>
LOOP END

LOOP BEGIN at clubb_intr.F90(878,64)
   remark #25420: Collapsed with loop at line 878 
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
   remark #25439: unrolled with remainder by 2  

   LOOP BEGIN at clubb_intr.F90(878,64)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at clubb_intr.F90(878,64)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: CLUBB_INTR::CLUBB_TEND_CAM:KGEN_VERIFY_REAL_R8_DIM1

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at clubb_intr.F90(784,22)
<Peeled>
LOOP END

LOOP BEGIN at clubb_intr.F90(784,22)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 15.500 
   remark #15478: estimated potential speedup: 2.110 
   remark #15479: lightweight vector operations: 14 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at clubb_intr.F90(784,22)
<Remainder>
LOOP END

LOOP BEGIN at clubb_intr.F90(792,30)
<Peeled>
LOOP END

LOOP BEGIN at clubb_intr.F90(792,30)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 12.500 
   remark #15478: estimated potential speedup: 2.520 
   remark #15479: lightweight vector operations: 15 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at clubb_intr.F90(792,30)
<Remainder>
LOOP END

LOOP BEGIN at clubb_intr.F90(802,25)
<Peeled>
LOOP END

LOOP BEGIN at clubb_intr.F90(802,25)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 21 
   remark #15477: vector loop cost: 11.000 
   remark #15478: estimated potential speedup: 2.870 
   remark #15479: lightweight vector operations: 9 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at clubb_intr.F90(802,25)
<Remainder>
LOOP END

LOOP BEGIN at clubb_intr.F90(803,21)
   remark #15388: vectorization support: reference 2225 has aligned access
   remark #15388: vectorization support: reference 2225 has aligned access
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 26 
   remark #15477: vector loop cost: 7.120 
   remark #15478: estimated potential speedup: 3.230 
   remark #15479: lightweight vector operations: 14 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=2
LOOP END

LOOP BEGIN at clubb_intr.F90(803,21)
<Remainder>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at clubb_intr.F90(804,25)
   remark #15389: vectorization support: reference var has unaligned access   [ clubb_intr.F90(804,56) ]
   remark #15389: vectorization support: reference ref_var has unaligned access   [ clubb_intr.F90(804,56) ]
   remark #15389: vectorization support: reference ref_var has unaligned access   [ clubb_intr.F90(804,56) ]
   remark #15389: vectorization support: reference _43 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15456: masked unaligned unit stride loads: 3 
   remark #15457: masked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 39 
   remark #15477: vector loop cost: 20.750 
   remark #15478: estimated potential speedup: 1.790 
   remark #15479: lightweight vector operations: 23 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=8
LOOP END

LOOP BEGIN at clubb_intr.F90(804,25)
<Remainder>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at clubb_intr.F90(805,25)
   remark #15389: vectorization support: reference var has unaligned access   [ clubb_intr.F90(805,46) ]
   remark #15389: vectorization support: reference ref_var has unaligned access   [ clubb_intr.F90(805,46) ]
   remark #15389: vectorization support: reference _43 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15456: masked unaligned unit stride loads: 2 
   remark #15457: masked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 25 
   remark #15477: vector loop cost: 10.620 
   remark #15478: estimated potential speedup: 2.190 
   remark #15479: lightweight vector operations: 20 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=2
LOOP END

LOOP BEGIN at clubb_intr.F90(805,25)
<Remainder>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at clubb_intr.F90(807,25)
   remark #15389: vectorization support: reference var has unaligned access   [ clubb_intr.F90(807,46) ]
   remark #15389: vectorization support: reference ref_var has unaligned access   [ clubb_intr.F90(807,46) ]
   remark #15389: vectorization support: reference _43 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15456: masked unaligned unit stride loads: 2 
   remark #15457: masked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 26 
   remark #15477: vector loop cost: 10.620 
   remark #15478: estimated potential speedup: 2.270 
   remark #15479: lightweight vector operations: 20 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=2
LOOP END

LOOP BEGIN at clubb_intr.F90(807,25)
<Remainder>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at clubb_intr.F90(808,25)
   remark #15389: vectorization support: reference _43 has unaligned access
   remark #15389: vectorization support: reference _43 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15456: masked unaligned unit stride loads: 1 
   remark #15457: masked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 7.250 
   remark #15478: estimated potential speedup: 2.940 
   remark #15479: lightweight vector operations: 12 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at clubb_intr.F90(808,25)
<Remainder>
LOOP END

LOOP BEGIN at clubb_intr.F90(810,37)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at clubb_intr.F90(810,37)
<Remainder>
LOOP END

LOOP BEGIN at clubb_intr.F90(811,36)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at clubb_intr.F90(811,36)
<Remainder>
LOOP END

LOOP BEGIN at clubb_intr.F90(816,36)
<Peeled>
LOOP END

LOOP BEGIN at clubb_intr.F90(816,36)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 21 
   remark #15477: vector loop cost: 11.000 
   remark #15478: estimated potential speedup: 2.870 
   remark #15479: lightweight vector operations: 9 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at clubb_intr.F90(816,36)
<Remainder>
LOOP END

LOOP BEGIN at clubb_intr.F90(818,61)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at clubb_intr.F90(818,61)
<Remainder>
LOOP END

LOOP BEGIN at clubb_intr.F90(819,64)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at clubb_intr.F90(819,64)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: FILL_HOLES::FILL_HOLES_VERTICAL

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at fill_holes.F90(83,10)
<Peeled>
LOOP END

LOOP BEGIN at fill_holes.F90(83,10)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 5.250 
   remark #15478: estimated potential speedup: 3.520 
   remark #15479: lightweight vector operations: 15 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at fill_holes.F90(83,10)
<Remainder>
LOOP END

LOOP BEGIN at fill_holes.F90(93,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at fill_holes.F90(96,14)
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 20 
      remark #15477: vector loop cost: 7.250 
      remark #15478: estimated potential speedup: 1.160 
      remark #15479: lightweight vector operations: 14 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at fill_holes.F90(99,18)
      remark #15388: vectorization support: reference 175 has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15460: masked strided loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.420 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 2 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=2
   LOOP END

   LOOP BEGIN at fill_holes.F90(105,18)
      remark #15388: vectorization support: reference 185 has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15460: masked strided loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.420 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 2 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=2
   LOOP END

   LOOP BEGIN at fill_holes.F90(96,14)
   <Remainder>
      remark #25436: completely unrolled by 1  
   LOOP END

   LOOP BEGIN at fill_holes.F90(99,18)
   <Remainder>
      remark #25436: completely unrolled by 1  
   LOOP END

   LOOP BEGIN at fill_holes.F90(105,18)
   <Remainder>
      remark #25436: completely unrolled by 1  
   LOOP END
LOOP END

LOOP BEGIN at fill_holes.F90(119,12)
<Peeled>
LOOP END

LOOP BEGIN at fill_holes.F90(119,12)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 5.250 
   remark #15478: estimated potential speedup: 3.520 
   remark #15479: lightweight vector operations: 15 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at fill_holes.F90(119,12)
<Remainder>
LOOP END

LOOP BEGIN at fill_holes.F90(122,16)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15388: vectorization support: reference 204 has aligned access
   remark #15389: vectorization support: reference 1 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.250 
   remark #15478: estimated potential speedup: 1.760 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at fill_holes.F90(122,16)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at fill_holes.F90(122,16)
<Multiversioned v2>
   remark #15388: vectorization support: reference 204 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at fill_holes.F90(122,16)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at fill_holes.F90(128,18)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15388: vectorization support: reference 214 has aligned access
   remark #15389: vectorization support: reference 1 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.250 
   remark #15478: estimated potential speedup: 1.760 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at fill_holes.F90(128,18)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at fill_holes.F90(128,18)
<Multiversioned v2>
   remark #15388: vectorization support: reference 214 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at fill_holes.F90(128,18)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: FILL_HOLES::FILL_HOLES_MULTIPLICATIVE

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at fill_holes.F90(345,5) inlined into fill_holes.F90(187,17)
   remark #15388: vectorization support: reference DENOM_FIELD has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 4.540 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at fill_holes.F90(345,5) inlined into fill_holes.F90(187,17)
<Remainder>
   remark #15388: vectorization support: reference DENOM_FIELD has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at fill_holes.F90(345,5) inlined into fill_holes.F90(187,17)
<Remainder>
LOOP END

LOOP BEGIN at fill_holes.F90(410,25) inlined into fill_holes.F90(187,17)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at fill_holes.F90(410,25) inlined into fill_holes.F90(187,17)
<Remainder>
LOOP END

LOOP BEGIN at fill_holes.F90(410,25) inlined into fill_holes.F90(187,17)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at fill_holes.F90(410,25) inlined into fill_holes.F90(187,17)
<Remainder>
LOOP END

LOOP BEGIN at fill_holes.F90(192,7)
   remark #15388: vectorization support: reference field_clipped has aligned access
   remark #15389: vectorization support: reference field has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 11.000 
   remark #15478: estimated potential speedup: 2.980 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at fill_holes.F90(192,7)
<Remainder>
   remark #15388: vectorization support: reference field_clipped has aligned access
   remark #15389: vectorization support: reference field has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at fill_holes.F90(192,7)
<Remainder>
LOOP END

LOOP BEGIN at fill_holes.F90(196,7)
   remark #15388: vectorization support: reference field_clipped has aligned access
   remark #15389: vectorization support: reference field has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 11.000 
   remark #15478: estimated potential speedup: 2.980 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at fill_holes.F90(196,7)
<Remainder>
   remark #15388: vectorization support: reference field_clipped has aligned access
   remark #15389: vectorization support: reference field has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at fill_holes.F90(196,7)
<Remainder>
LOOP END

LOOP BEGIN at fill_holes.F90(345,5) inlined into fill_holes.F90(200,25)
   remark #15388: vectorization support: reference DENOM_FIELD has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 4.540 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at fill_holes.F90(345,5) inlined into fill_holes.F90(200,25)
<Remainder>
   remark #15388: vectorization support: reference DENOM_FIELD has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at fill_holes.F90(345,5) inlined into fill_holes.F90(200,25)
<Remainder>
LOOP END

LOOP BEGIN at fill_holes.F90(410,25) inlined into fill_holes.F90(200,25)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at fill_holes.F90(410,25) inlined into fill_holes.F90(200,25)
<Remainder>
LOOP END

LOOP BEGIN at fill_holes.F90(410,25) inlined into fill_holes.F90(200,25)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at fill_holes.F90(410,25) inlined into fill_holes.F90(200,25)
<Remainder>
LOOP END

LOOP BEGIN at fill_holes.F90(216,5)
   remark #15389: vectorization support: reference field has unaligned access
   remark #15388: vectorization support: reference field_clipped has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 17.000 
   remark #15478: estimated potential speedup: 2.410 
   remark #15479: lightweight vector operations: 8 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at fill_holes.F90(216,5)
<Remainder>
   remark #15389: vectorization support: reference field has unaligned access
   remark #15388: vectorization support: reference field_clipped has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at fill_holes.F90(216,5)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: FILL_HOLES::VERTICAL_INTEGRAL

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at fill_holes.F90(410,25)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at fill_holes.F90(410,25)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: GRID_CLASS^REDIRECT_INTERPOLATED_AZT

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at grid_class.F90(904,8) inlined into grid_class.F90(686,35)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between 1 line 904 and 1 line 904
   remark #15346: vector dependence: assumed ANTI dependence between 1341 line 904 and 1341 line 904
   remark #25439: unrolled with remainder by 4  
LOOP END

LOOP BEGIN at grid_class.F90(904,8) inlined into grid_class.F90(686,35)
<Remainder>
LOOP END

LOOP BEGIN at grid_class.F90(686,7)
   remark #25401: memcopy(with guard) generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at grid_class.F90(686,7)
   <Multiversioned v2>
      remark #15389: vectorization support: reference redirect_interpolated_azt has unaligned access
      remark #15388: vectorization support: reference 1341 has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.750 
      remark #15478: estimated potential speedup: 1.440 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at grid_class.F90(686,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: STAT_END_UPDATE

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at stats_type_utilities.F90(252,5)
<Predicate Optimized v1>
   remark #25422: Invariant Condition at line 286 hoisted out of this loop
   remark #15382: vectorization support: call to function STAT_UPDATE_VAR_PT cannot be vectorized   [ stats_type_utilities.F90(289,14) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ stats_type_utilities.F90(293,77) ]
   remark #15382: vectorization support: call to function CLUBB_DEBUG cannot be vectorized   [ stats_type_utilities.F90(293,14) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between k line 253 and k line 255
   remark #15346: vector dependence: assumed FLOW dependence between k line 255 and k line 253
LOOP END

LOOP BEGIN at stats_type_utilities.F90(252,5)
<Predicate Optimized v2>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between k line 253 and k line 255
   remark #15346: vector dependence: assumed FLOW dependence between k line 255 and k line 253
LOOP END
===========================================================================

Begin optimization report for: GRID_CLASS::REDIRECT_INTERPOLATED_AZM

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at grid_class.F90(729,8) inlined into grid_class.F90(610,35)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between 1 line 729 and 1 line 729
   remark #15346: vector dependence: assumed ANTI dependence between 1251 line 729 and 1251 line 729
   remark #25439: unrolled with remainder by 4  
LOOP END

LOOP BEGIN at grid_class.F90(729,8) inlined into grid_class.F90(610,35)
<Remainder>
LOOP END

LOOP BEGIN at grid_class.F90(610,7)
   remark #25401: memcopy(with guard) generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at grid_class.F90(610,7)
   <Multiversioned v2>
      remark #15389: vectorization support: reference redirect_interpolated_azm has unaligned access
      remark #15388: vectorization support: reference 1251 has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.750 
      remark #15478: estimated potential speedup: 1.440 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at grid_class.F90(610,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: ANL_ERF^CR_ERF

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at anl_erf.F90(133,7) inlined into anl_erf.F90(53,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between XDEN line 135 and XDEN line 135
   remark #15346: vector dependence: assumed FLOW dependence between XDEN line 135 and XDEN line 135
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at anl_erf.F90(144,7) inlined into anl_erf.F90(53,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between XDEN line 146 and XDEN line 146
   remark #15346: vector dependence: assumed FLOW dependence between XDEN line 146 and XDEN line 146
   remark #25436: completely unrolled by 7  
LOOP END

LOOP BEGIN at anl_erf.F90(173,9) inlined into anl_erf.F90(53,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between XDEN line 175 and XDEN line 175
   remark #15346: vector dependence: assumed FLOW dependence between XDEN line 175 and XDEN line 175
   remark #25436: completely unrolled by 4  
LOOP END
===========================================================================

Begin optimization report for: STAT_BEGIN_UPDATE

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at stats_type_utilities.F90(153,5)
<Predicate Optimized v1>
   remark #25422: Invariant Condition at line 192 hoisted out of this loop
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ stats_type_utilities.F90(202,11) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ stats_type_utilities.F90(201,73) ]
   remark #15382: vectorization support: call to function CLUBB_DEBUG cannot be vectorized   [ stats_type_utilities.F90(200,14) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between grid_kind line 194 and grid_kind line 202
   remark #15346: vector dependence: assumed FLOW dependence between grid_kind line 202 and grid_kind line 194
LOOP END

LOOP BEGIN at stats_type_utilities.F90(153,5)
<Predicate Optimized v2>
   remark #15527: loop was not vectorized: function call to __getsp_inlined cannot be vectorized   [ stats_type_utilities.F90(161,20) ]
LOOP END
===========================================================================

Begin optimization report for: MIXING_LENGTH::COMPUTE_LENGTH

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at mixing_length.F90(153,5)
   remark #15388: vectorization support: reference exp_mu_dzm has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15399: vectorization support: unroll factor set to 4
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 134 
   remark #15477: vector loop cost: 628.000 
   remark #15478: estimated potential speedup: 0.850 
   remark #15479: lightweight vector operations: 7 
   remark #15480: medium-overhead vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15485: serialized function calls: 1
   remark #15488: --- end vector loop cost summary ---
   remark #15489: --- begin vector function matching report ---
   remark #15490: Function call: exp with simdlen=2, actual parameter types: (vector)   [ mixing_length.F90(153,22) ]
   remark #15545: SIMD annotation was not seen, consider adding 'declare simd' directives at function declaration 
   remark #15493: --- end vector function matching report ---
LOOP END

LOOP BEGIN at mixing_length.F90(158,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15388: vectorization support: reference invrs_dzm_on_mu has aligned access
   remark #15389: vectorization support: reference 1 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 30 
   remark #15477: vector loop cost: 41.000 
   remark #15478: estimated potential speedup: 2.710 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mixing_length.F90(158,5)
<Remainder, Multiversioned v1>
   remark #15388: vectorization support: reference invrs_dzm_on_mu has aligned access
   remark #15389: vectorization support: reference 1 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mixing_length.F90(158,5)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at mixing_length.F90(158,5)
<Multiversioned v2>
   remark #15388: vectorization support: reference invrs_dzm_on_mu has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 30 
   remark #15477: vector loop cost: 42.000 
   remark #15478: estimated potential speedup: 2.650 
   remark #15479: lightweight vector operations: 4 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mixing_length.F90(158,5)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at mixing_length.F90(169,7)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at mixing_length.F90(391,7)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at mixing_length.F90(625,5)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at mixing_length.F90(625,5)
<Distributed chunk1>
   remark #25426: Loop Distributed (2 way) 
   remark #15389: vectorization support: reference lscale_up has unaligned access   [ mixing_length.F90(641,7) ]
   remark #15389: vectorization support: reference lscale_up has unaligned access   [ mixing_length.F90(641,7) ]
   remark #15388: vectorization support: reference lscale_down has aligned access   [ mixing_length.F90(642,7) ]
   remark #15388: vectorization support: reference lscale_down has aligned access   [ mixing_length.F90(642,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 61 
   remark #15477: vector loop cost: 42.000 
   remark #15478: estimated potential speedup: 4.840 
   remark #15479: lightweight vector operations: 20 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mixing_length.F90(625,5)
<Remainder, Distributed chunk1>
   remark #15389: vectorization support: reference lscale_up has unaligned access   [ mixing_length.F90(641,7) ]
   remark #15389: vectorization support: reference lscale_up has unaligned access   [ mixing_length.F90(641,7) ]
   remark #15388: vectorization support: reference lscale_down has aligned access   [ mixing_length.F90(642,7) ]
   remark #15388: vectorization support: reference lscale_down has aligned access   [ mixing_length.F90(642,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mixing_length.F90(625,5)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at mixing_length.F90(625,5)
<Peeled, Distributed chunk2>
LOOP END

LOOP BEGIN at mixing_length.F90(625,5)
<Distributed chunk2>
   remark #15389: vectorization support: reference lscale_up has unaligned access   [ mixing_length.F90(643,19) ]
   remark #15389: vectorization support: reference lscale_down has unaligned access   [ mixing_length.F90(643,19) ]
   remark #15388: vectorization support: reference lscale has aligned access   [ mixing_length.F90(643,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 49 
   remark #15477: vector loop cost: 51.000 
   remark #15478: estimated potential speedup: 3.430 
   remark #15479: lightweight vector operations: 7 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mixing_length.F90(625,5)
<Remainder, Distributed chunk2>
   remark #15389: vectorization support: reference lscale_up has unaligned access   [ mixing_length.F90(643,19) ]
   remark #15389: vectorization support: reference lscale_down has unaligned access   [ mixing_length.F90(643,19) ]
   remark #15388: vectorization support: reference lscale has aligned access   [ mixing_length.F90(643,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mixing_length.F90(625,5)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at mixing_length.F90(651,5)
<Peeled>
LOOP END

LOOP BEGIN at mixing_length.F90(651,5)
   remark #15388: vectorization support: reference lscale has aligned access
   remark #15388: vectorization support: reference lscale has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 5.610 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mixing_length.F90(651,5)
<Remainder>
   remark #15388: vectorization support: reference lscale has aligned access
   remark #15388: vectorization support: reference lscale has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mixing_length.F90(651,5)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at mixing_length.F90(377,5)
   remark #15529: loop was not vectorized: volatile assignment was not vectorized. Try using non-volatile assignment.   [ grid_class.F90(616,18) ]
LOOP END

LOOP BEGIN at mixing_length.F90(623,5)
   remark #15529: loop was not vectorized: volatile assignment was not vectorized. Try using non-volatile assignment.   [ grid_class.F90(616,18) ]
LOOP END

Fusion of IFs performed in mixing_length_mp_compute_length_ at line 196

Fusion of IFs performed in mixing_length_mp_compute_length_ at line 428
===========================================================================

Begin optimization report for: SURFACE_VARNCE_MODULE::SURFACE_VARNCE

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at surface_varnce_module.F90(304,11)
<Peeled, Predicate Optimized v1>
LOOP END

LOOP BEGIN at surface_varnce_module.F90(304,11)
<Predicate Optimized v1>
   remark #25423: Condition at line 323 hoisted out of this loop
   remark #15389: vectorization support: reference sclrprtp_sfc has unaligned access   [ surface_varnce_module.F90(329,17) ]
   remark #15388: vectorization support: reference wpsclrp_sfc has aligned access   [ surface_varnce_module.F90(329,17) ]
   remark #15389: vectorization support: reference sclrpthlp_sfc has unaligned access   [ surface_varnce_module.F90(334,17) ]
   remark #15388: vectorization support: reference wpsclrp_sfc has aligned access   [ surface_varnce_module.F90(338,17) ]
   remark #15388: vectorization support: reference wpsclrp_sfc has aligned access   [ surface_varnce_module.F90(343,55) ]
   remark #15389: vectorization support: reference sclrp2_sfc has unaligned access   [ surface_varnce_module.F90(342,14) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 3 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 197 
   remark #15477: vector loop cost: 39.250 
   remark #15478: estimated potential speedup: 4.740 
   remark #15479: lightweight vector operations: 32 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at surface_varnce_module.F90(304,11)
<Remainder, Predicate Optimized v1>
LOOP END

LOOP BEGIN at surface_varnce_module.F90(304,11)
<Peeled, Predicate Optimized v2>
LOOP END

LOOP BEGIN at surface_varnce_module.F90(304,11)
<Predicate Optimized v2>
   remark #15389: vectorization support: reference sclrprtp_sfc has unaligned access   [ surface_varnce_module.F90(329,17) ]
   remark #15388: vectorization support: reference wpsclrp_sfc has aligned access   [ surface_varnce_module.F90(329,17) ]
   remark #15389: vectorization support: reference sclrpthlp_sfc has unaligned access   [ surface_varnce_module.F90(334,17) ]
   remark #15388: vectorization support: reference wpsclrp_sfc has aligned access   [ surface_varnce_module.F90(338,17) ]
   remark #15388: vectorization support: reference wpsclrp_sfc has aligned access   [ surface_varnce_module.F90(343,55) ]
   remark #15389: vectorization support: reference sclrp2_sfc has unaligned access   [ surface_varnce_module.F90(342,14) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 3 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 197 
   remark #15477: vector loop cost: 39.250 
   remark #15478: estimated potential speedup: 4.740 
   remark #15479: lightweight vector operations: 32 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at surface_varnce_module.F90(304,11)
<Remainder, Predicate Optimized v2>
LOOP END
===========================================================================

Begin optimization report for: MONO_FLUX_LIMITER::MONOTONIC_TURBULENT_FLUX_LIMIT

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at mono_flux_limiter.F90(443,13)
   remark #15388: vectorization support: reference 852 has aligned access
   remark #15389: vectorization support: reference wpxp has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 30 
   remark #15477: vector loop cost: 37.000 
   remark #15478: estimated potential speedup: 2.970 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(443,13)
<Remainder>
   remark #15388: vectorization support: reference 852 has aligned access
   remark #15389: vectorization support: reference wpxp has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(443,13)
<Remainder>
LOOP END

LOOP BEGIN at stats_type_utilities.F90(153,5) inlined into mono_flux_limiter.F90(443,13)
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ stats_type_utilities.F90(202,11) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ stats_type_utilities.F90(201,73) ]
   remark #15382: vectorization support: call to function CLUBB_DEBUG cannot be vectorized   [ stats_type_utilities.F90(200,14) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between 4 line 195 and 4 line 198
   remark #15346: vector dependence: assumed FLOW dependence between 4 line 198 and 4 line 195
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(444,13)
   remark #15388: vectorization support: reference 856 has aligned access
   remark #15389: vectorization support: reference xm has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 30 
   remark #15477: vector loop cost: 37.000 
   remark #15478: estimated potential speedup: 2.970 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(444,13)
<Remainder>
   remark #15388: vectorization support: reference 856 has aligned access
   remark #15389: vectorization support: reference xm has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(444,13)
<Remainder>
LOOP END

LOOP BEGIN at stats_type_utilities.F90(153,5) inlined into mono_flux_limiter.F90(444,13)
<Predicate Optimized v1>
   remark #25422: Invariant Condition at line 192 hoisted out of this loop
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ stats_type_utilities.F90(202,11) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ stats_type_utilities.F90(201,73) ]
   remark #15382: vectorization support: call to function CLUBB_DEBUG cannot be vectorized   [ stats_type_utilities.F90(200,14) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between 3 line 195 and 3 line 198
   remark #15346: vector dependence: assumed FLOW dependence between 3 line 198 and 3 line 195
LOOP END

LOOP BEGIN at stats_type_utilities.F90(153,5) inlined into mono_flux_limiter.F90(444,13)
<Predicate Optimized v2>
   remark #15527: loop was not vectorized: function call to __getsp_inlined cannot be vectorized   [ stats_type_utilities.F90(161,20) ]
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(456,5)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at mono_flux_limiter.F90(456,5)
      remark #15388: vectorization support: reference wpxp_net_adjust has aligned access
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 3.000 
      remark #15478: estimated potential speedup: 2.660 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at mono_flux_limiter.F90(456,5)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(459,5)
   remark #25401: memcopy(with guard) generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at mono_flux_limiter.F90(459,5)
   <Multiversioned v2>
      remark #15388: vectorization support: reference xm_enter_mfl has aligned access
      remark #15389: vectorization support: reference xm has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.250 
      remark #15478: estimated potential speedup: 3.170 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at mono_flux_limiter.F90(459,5)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at grid_class.F90(904,8) inlined into mono_flux_limiter.F90(461,19)
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15460: masked strided loads: 4 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 12 
   remark #15477: vector loop cost: 38.000 
   remark #15478: estimated potential speedup: 1.250 
   remark #15479: lightweight vector operations: 6 
   remark #15480: medium-overhead vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at grid_class.F90(904,8) inlined into mono_flux_limiter.F90(461,19)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at grid_class.F90(904,8) inlined into mono_flux_limiter.F90(461,19)
<Remainder>
LOOP END

LOOP BEGIN at grid_class.F90(686,7) inlined into mono_flux_limiter.F90(461,19)
   remark #25401: memcopy(with guard) generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at grid_class.F90(686,7) inlined into mono_flux_limiter.F90(461,19)
   <Multiversioned v2>
      remark #15389: vectorization support: reference 866 has unaligned access
      remark #15388: vectorization support: reference 1341 has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.750 
      remark #15478: estimated potential speedup: 1.440 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at grid_class.F90(686,7) inlined into mono_flux_limiter.F90(461,19)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(461,5)
   remark #15388: vectorization support: reference xp2_zt has aligned access
   remark #15388: vectorization support: reference 866 has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 5.730 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(461,5)
<Remainder>
   remark #15388: vectorization support: reference xp2_zt has aligned access
   remark #15388: vectorization support: reference 866 has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(461,5)
<Remainder>
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(468,5)
   remark #15388: vectorization support: reference xp2_zt has aligned access
   remark #15388: vectorization support: reference xp2_zt has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 5.730 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(468,5)
<Remainder>
   remark #15388: vectorization support: reference xp2_zt has aligned access
   remark #15388: vectorization support: reference xp2_zt has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(468,5)
<Remainder>
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(473,5)
<Peeled>
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(473,5)
   remark #15388: vectorization support: reference xp2_zt has aligned access   [ mono_flux_limiter.F90(477,21) ]
   remark #15388: vectorization support: reference xm_without_ta has aligned access   [ mono_flux_limiter.F90(500,8) ]
   remark #15389: vectorization support: reference xm_old has unaligned access   [ mono_flux_limiter.F90(500,8) ]
   remark #15389: vectorization support: reference xm_forcing has unaligned access   [ mono_flux_limiter.F90(500,8) ]
   remark #15388: vectorization support: reference min_x_allowable_lev has aligned access   [ mono_flux_limiter.F90(505,8) ]
   remark #15388: vectorization support: reference xm_without_ta has aligned access   [ mono_flux_limiter.F90(505,8) ]
   remark #15388: vectorization support: reference max_x_allowable_lev has aligned access   [ mono_flux_limiter.F90(508,8) ]
   remark #15388: vectorization support: reference xm_without_ta has aligned access   [ mono_flux_limiter.F90(508,8) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 3 
   remark #15449: unmasked aligned unit stride stores: 3 
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 86 
   remark #15477: vector loop cost: 22.000 
   remark #15478: estimated potential speedup: 3.740 
   remark #15479: lightweight vector operations: 32 
   remark #15488: --- end vector loop cost summary ---
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(473,5)
<Remainder>
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(521,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between 1 line 532 and wpxp line 592
   remark #15346: vector dependence: assumed FLOW dependence between wpxp line 592 and 1 line 532

   LOOP BEGIN at mono_flux_limiter.F90(528,29)
      remark #25084: Preprocess Loopnests: Moving Out Store    [ mono_flux_limiter.F90(528,29) ]
      remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at mono_flux_limiter.F90(528,29)
   <Remainder>
   LOOP END

   LOOP BEGIN at mono_flux_limiter.F90(530,29)
      remark #25084: Preprocess Loopnests: Moving Out Store    [ mono_flux_limiter.F90(530,29) ]
      remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at mono_flux_limiter.F90(530,29)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(646,10)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 5.250 
   remark #15478: estimated potential speedup: 3.550 
   remark #15479: lightweight vector operations: 15 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(646,10)
<Remainder>
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(791,5) inlined into mono_flux_limiter.F90(652,16)
   remark #25420: Collapsed with loop at line 791 
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at mono_flux_limiter.F90(791,5) inlined into mono_flux_limiter.F90(652,16)
      remark #15388: vectorization support: reference lhs_mfl_xm has aligned access
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 3.000 
      remark #15478: estimated potential speedup: 2.660 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at mono_flux_limiter.F90(791,5) inlined into mono_flux_limiter.F90(652,16)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at mono_flux_limiter.F90(791,5) inlined into mono_flux_limiter.F90(652,16)
      remark #25408: memset generated
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(796,5) inlined into mono_flux_limiter.F90(652,16)
   remark #25261: Invariant Condition eliminated(Proven True) at line 235
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at mono_flux_limiter.F90(800,11) inlined into mono_flux_limiter.F90(652,16)
      remark #15389: vectorization support: reference lhs_mfl_xm has unaligned access
      remark #15389: vectorization support: reference lhs_mfl_xm has unaligned access
      remark #15388: vectorization support: reference 983 has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 6 
      remark #15477: vector loop cost: 4.000 
      remark #15478: estimated potential speedup: 0.900 
      remark #15479: lightweight vector operations: 3 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25436: completely unrolled by 3  
   LOOP END

   LOOP BEGIN at mono_flux_limiter.F90(804,11) inlined into mono_flux_limiter.F90(652,16)
      remark #15389: vectorization support: reference lhs_mfl_xm has unaligned access
      remark #15389: vectorization support: reference lhs_mfl_xm has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 6 
      remark #15477: vector loop cost: 3.000 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25436: completely unrolled by 3  
   LOOP END
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(814,5) inlined into mono_flux_limiter.F90(652,16)
   remark #25408: memset generated
   remark #25408: memset generated
   remark #15388: vectorization support: reference lhs_mfl_xm has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 1.500 
   remark #15478: estimated potential speedup: 1.710 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(814,5) inlined into mono_flux_limiter.F90(652,16)
<Remainder>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(857,5) inlined into mono_flux_limiter.F90(655,16)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at mono_flux_limiter.F90(857,5) inlined into mono_flux_limiter.F90(655,16)
      remark #15388: vectorization support: reference rhs_mfl_xm has aligned access
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 3.000 
      remark #15478: estimated potential speedup: 2.660 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at mono_flux_limiter.F90(857,5) inlined into mono_flux_limiter.F90(655,16)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(861,5) inlined into mono_flux_limiter.F90(655,16)
<Peeled, Distributed chunk1>
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(861,5) inlined into mono_flux_limiter.F90(655,16)
<Distributed chunk1>
   remark #25426: Loop Distributed (3 way) 
   remark #15388: vectorization support: reference rhs_mfl_xm has aligned access   [ mono_flux_limiter.F90(865,8) ]
   remark #15388: vectorization support: reference rhs_mfl_xm has aligned access   [ mono_flux_limiter.F90(865,8) ]
   remark #15389: vectorization support: reference xm_old has unaligned access   [ mono_flux_limiter.F90(865,8) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 33 
   remark #15477: vector loop cost: 49.000 
   remark #15478: estimated potential speedup: 2.510 
   remark #15479: lightweight vector operations: 6 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(861,5) inlined into mono_flux_limiter.F90(655,16)
<Remainder, Distributed chunk1>
   remark #15388: vectorization support: reference rhs_mfl_xm has aligned access   [ mono_flux_limiter.F90(865,8) ]
   remark #15388: vectorization support: reference rhs_mfl_xm has aligned access   [ mono_flux_limiter.F90(865,8) ]
   remark #15389: vectorization support: reference xm_old has unaligned access   [ mono_flux_limiter.F90(865,8) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(861,5) inlined into mono_flux_limiter.F90(655,16)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(861,5) inlined into mono_flux_limiter.F90(655,16)
<Peeled, Distributed chunk2>
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(861,5) inlined into mono_flux_limiter.F90(655,16)
<Distributed chunk2>
   remark #15388: vectorization support: reference rhs_mfl_xm has aligned access   [ mono_flux_limiter.F90(876,8) ]
   remark #15388: vectorization support: reference rhs_mfl_xm has aligned access   [ mono_flux_limiter.F90(876,8) ]
   remark #15388: vectorization support: reference invrs_rho_ds_zt has aligned access   [ mono_flux_limiter.F90(876,8) ]
   remark #15388: vectorization support: reference rho_ds_zm has aligned access   [ mono_flux_limiter.F90(876,8) ]
   remark #15389: vectorization support: reference wpxp has unaligned access   [ mono_flux_limiter.F90(876,8) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 3 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 2 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 24 
   remark #15477: vector loop cost: 14.750 
   remark #15478: estimated potential speedup: 1.610 
   remark #15479: lightweight vector operations: 22 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(861,5) inlined into mono_flux_limiter.F90(655,16)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(861,5) inlined into mono_flux_limiter.F90(655,16)
<Peeled, Distributed chunk3>
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(861,5) inlined into mono_flux_limiter.F90(655,16)
<Distributed chunk3>
   remark #15388: vectorization support: reference rhs_mfl_xm has aligned access   [ mono_flux_limiter.F90(885,8) ]
   remark #15388: vectorization support: reference rhs_mfl_xm has aligned access   [ mono_flux_limiter.F90(885,8) ]
   remark #15389: vectorization support: reference xm_forcing has unaligned access   [ mono_flux_limiter.F90(885,8) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 13.000 
   remark #15478: estimated potential speedup: 1.780 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(861,5) inlined into mono_flux_limiter.F90(655,16)
<Remainder, Distributed chunk3>
   remark #15388: vectorization support: reference rhs_mfl_xm has aligned access   [ mono_flux_limiter.F90(885,8) ]
   remark #15388: vectorization support: reference rhs_mfl_xm has aligned access   [ mono_flux_limiter.F90(885,8) ]
   remark #15389: vectorization support: reference xm_forcing has unaligned access   [ mono_flux_limiter.F90(885,8) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(861,5) inlined into mono_flux_limiter.F90(655,16)
<Remainder, Distributed chunk3>
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(946,7) inlined into mono_flux_limiter.F90(659,16)
   remark #25408: memset generated
   remark #25408: memset generated
   remark #15389: vectorization support: reference SOLVE_TYPE_STR has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 1.500 
   remark #15478: estimated potential speedup: 0.930 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25436: completely unrolled by 7  
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(948,7) inlined into mono_flux_limiter.F90(659,16)
   remark #25408: memset generated
   remark #25408: memset generated
   remark #15389: vectorization support: reference SOLVE_TYPE_STR has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 1.500 
   remark #15478: estimated potential speedup: 0.920 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(950,7) inlined into mono_flux_limiter.F90(659,16)
   remark #25401: memcopy(with guard) generated
   remark #25401: memcopy(with guard) generated
   remark #15389: vectorization support: reference SOLVE_TYPE_STR has unaligned access
   remark #15388: vectorization support: reference .L_2__cnst_pck.94.var has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 1.750 
   remark #15478: estimated potential speedup: 1.140 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(953,10) inlined into mono_flux_limiter.F90(659,16)
   remark #15388: vectorization support: reference 1079 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(953,10) inlined into mono_flux_limiter.F90(659,16)
<Remainder>
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(954,38) inlined into mono_flux_limiter.F90(659,16)
   remark #15388: vectorization support: reference 1083 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(954,38) inlined into mono_flux_limiter.F90(659,16)
<Remainder>
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(955,12) inlined into mono_flux_limiter.F90(659,16)
   remark #15388: vectorization support: reference 1087 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(955,12) inlined into mono_flux_limiter.F90(659,16)
<Remainder>
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(954,38) inlined into mono_flux_limiter.F90(659,16)
   remark #25045: Fused Loops: ( 954 955 955 )

   remark #15388: vectorization support: reference 1079 has aligned access
   remark #15388: vectorization support: reference 1083 has aligned access   [ mono_flux_limiter.F90(955,12) ]
   remark #15388: vectorization support: reference 1087 has aligned access   [ mono_flux_limiter.F90(955,28) ]
   remark #15301: FUSED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 3 
   remark #15462: unmasked indexed (or gather) loads: 3 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 7.500 
   remark #15478: estimated potential speedup: 1.460 
   remark #15479: lightweight vector operations: 8 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(955,12) inlined into mono_flux_limiter.F90(659,16)
   remark #25046: Loop lost in Fusion 
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(955,28) inlined into mono_flux_limiter.F90(659,16)
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(954,38) inlined into mono_flux_limiter.F90(659,16)
<Remainder>
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(696,13)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15388: vectorization support: reference 922 has aligned access
   remark #15389: vectorization support: reference 1 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.250 
   remark #15478: estimated potential speedup: 1.760 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(696,13)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(696,13)
<Multiversioned v2>
   remark #15388: vectorization support: reference 922 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(696,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at fill_holes.F90(410,25) inlined into mono_flux_limiter.F90(696,13)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at fill_holes.F90(410,25) inlined into mono_flux_limiter.F90(696,13)
<Remainder>
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(716,14)
<Peeled>
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(716,14)
   remark #15388: vectorization support: reference xm has aligned access
   remark #15388: vectorization support: reference xm has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 5.610 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(716,14)
<Remainder>
   remark #15388: vectorization support: reference xm has aligned access
   remark #15388: vectorization support: reference xm has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(716,14)
<Remainder>
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(737,13)
   remark #15388: vectorization support: reference 949 has aligned access
   remark #15389: vectorization support: reference wpxp has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 30 
   remark #15477: vector loop cost: 37.000 
   remark #15478: estimated potential speedup: 2.970 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(737,13)
<Remainder>
   remark #15388: vectorization support: reference 949 has aligned access
   remark #15389: vectorization support: reference wpxp has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(737,13)
<Remainder>
LOOP END

LOOP BEGIN at stats_type_utilities.F90(252,5) inlined into mono_flux_limiter.F90(737,13)
   remark #15382: vectorization support: call to function STAT_UPDATE_VAR_PT cannot be vectorized   [ stats_type_utilities.F90(289,14) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ stats_type_utilities.F90(293,77) ]
   remark #15382: vectorization support: call to function CLUBB_DEBUG cannot be vectorized   [ stats_type_utilities.F90(293,14) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between K line 253 and K line 255
   remark #15346: vector dependence: assumed FLOW dependence between K line 255 and K line 253
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(738,13)
   remark #15388: vectorization support: reference 953 has aligned access
   remark #15389: vectorization support: reference xm has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 30 
   remark #15477: vector loop cost: 37.000 
   remark #15478: estimated potential speedup: 2.970 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(738,13)
<Remainder>
   remark #15388: vectorization support: reference 953 has aligned access
   remark #15389: vectorization support: reference xm has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mono_flux_limiter.F90(738,13)
<Remainder>
LOOP END

LOOP BEGIN at stats_type_utilities.F90(252,5) inlined into mono_flux_limiter.F90(738,13)
<Predicate Optimized v1>
   remark #25422: Invariant Condition at line 286 hoisted out of this loop
   remark #15382: vectorization support: call to function STAT_UPDATE_VAR_PT cannot be vectorized   [ stats_type_utilities.F90(289,14) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ stats_type_utilities.F90(293,77) ]
   remark #15382: vectorization support: call to function CLUBB_DEBUG cannot be vectorized   [ stats_type_utilities.F90(293,14) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between K line 253 and K line 255
   remark #15346: vector dependence: assumed FLOW dependence between K line 255 and K line 253
LOOP END

LOOP BEGIN at stats_type_utilities.F90(252,5) inlined into mono_flux_limiter.F90(738,13)
<Predicate Optimized v2>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between K line 253 and K line 255
   remark #15346: vector dependence: assumed FLOW dependence between K line 255 and K line 253
LOOP END
===========================================================================

Begin optimization report for: TRIDAG_SOLVE

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at dgtsv.f(177,13) inlined into lapack_wrap.F90(215,12)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at dgtsv.f(234,13) inlined into lapack_wrap.F90(215,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at dgtsv.f(242,22) inlined into lapack_wrap.F90(215,12)
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15460: masked strided loads: 2 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 9 
      remark #15477: vector loop cost: 26.000 
      remark #15478: estimated potential speedup: 1.370 
      remark #15479: lightweight vector operations: 5 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at dgtsv.f(242,22) inlined into lapack_wrap.F90(215,12)
   <Remainder>
   LOOP END

   LOOP BEGIN at dgtsv.f(261,19) inlined into lapack_wrap.F90(215,12)
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15460: masked strided loads: 3 
      remark #15462: unmasked indexed (or gather) loads: 2 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 16 
      remark #15477: vector loop cost: 50.000 
      remark #15478: estimated potential speedup: 1.270 
      remark #15479: lightweight vector operations: 10 
      remark #15480: medium-overhead vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at dgtsv.f(261,19) inlined into lapack_wrap.F90(215,12)
   <Remainder>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at dgtsv.f(261,19) inlined into lapack_wrap.F90(215,12)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at dgtsv.f(274,22) inlined into lapack_wrap.F90(215,12)
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15460: masked strided loads: 2 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 26.000 
   remark #15478: estimated potential speedup: 1.370 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at dgtsv.f(274,22) inlined into lapack_wrap.F90(215,12)
<Remainder>
LOOP END

LOOP BEGIN at dgtsv.f(287,19) inlined into lapack_wrap.F90(215,12)
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15460: masked strided loads: 3 
   remark #15462: unmasked indexed (or gather) loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 16 
   remark #15477: vector loop cost: 50.000 
   remark #15478: estimated potential speedup: 1.270 
   remark #15479: lightweight vector operations: 10 
   remark #15480: medium-overhead vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at dgtsv.f(287,19) inlined into lapack_wrap.F90(215,12)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at dgtsv.f(287,19) inlined into lapack_wrap.F90(215,12)
<Remainder>
LOOP END

LOOP BEGIN at dgtsv.f(303,10) inlined into lapack_wrap.F90(215,12)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.

   LOOP BEGIN at dgtsv.f(308,13) inlined into lapack_wrap.F90(215,12)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between rhs line 309 and rhs line 309
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END
LOOP END

LOOP BEGIN at dgtsv.f(317,13) inlined into lapack_wrap.F90(215,12)
   remark #15301: OUTER LOOP WAS VECTORIZED
   remark #15460: masked strided loads: 6 
   remark #15462: unmasked indexed (or gather) loads: 3 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 126 
   remark #15477: vector loop cost: 47.250 
   remark #15478: estimated potential speedup: 2.660 
   remark #15479: lightweight vector operations: 27 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at dgtsv.f(322,16) inlined into lapack_wrap.F90(215,12)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between rhs line 323 and rhs line 323
   LOOP END
LOOP END

LOOP BEGIN at dgtsv.f(317,13) inlined into lapack_wrap.F90(215,12)
<Remainder>

   LOOP BEGIN at dgtsv.f(322,16) inlined into lapack_wrap.F90(215,12)
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END
LOOP END

LOOP BEGIN at lapack_wrap.F90(239,7)
<Peeled>
LOOP END

LOOP BEGIN at lapack_wrap.F90(239,7)
   remark #25420: Collapsed with loop at line 239 
   remark #15388: vectorization support: reference solution has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 4.370 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at lapack_wrap.F90(239,7)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at lapack_wrap.F90(239,7)
<Remainder>
   remark #15388: vectorization support: reference solution has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lapack_wrap.F90(239,7)
<Remainder>
LOOP END

LOOP BEGIN at lapack_wrap.F90(576,20) inlined into lapack_wrap.F90(242,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lapack_wrap.F90(576,20) inlined into lapack_wrap.F90(242,12)
   <Peeled>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(576,20) inlined into lapack_wrap.F90(242,12)
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 20 
      remark #15477: vector loop cost: 5.250 
      remark #15478: estimated potential speedup: 3.530 
      remark #15479: lightweight vector operations: 15 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(576,20) inlined into lapack_wrap.F90(242,12)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at lapack_wrap.F90(247,7)
   remark #25420: Collapsed with loop at line 247 
   remark #25401: memcopy(with guard) generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lapack_wrap.F90(247,7)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(247,7)
   <Multiversioned v2>
      remark #15388: vectorization support: reference solution has aligned access
      remark #15389: vectorization support: reference rhs has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.250 
      remark #15478: estimated potential speedup: 1.720 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(247,7)
   <Remainder, Multiversioned v2>
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(247,7)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at lapack_wrap.F90(251,7)
<Peeled>
LOOP END

LOOP BEGIN at lapack_wrap.F90(251,7)
   remark #25420: Collapsed with loop at line 251 
   remark #15388: vectorization support: reference solution has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 4.370 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at lapack_wrap.F90(251,7)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at lapack_wrap.F90(251,7)
<Remainder>
   remark #15388: vectorization support: reference solution has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lapack_wrap.F90(251,7)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: LAPACK_WRAP::BAND_SOLVE

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at lapack_wrap.F90(481,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lapack_wrap.F90(481,5)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at lapack_wrap.F90(481,5)
      <Peeled>
         remark #25015: Estimate of max trip count of loop=12
      LOOP END

      LOOP BEGIN at lapack_wrap.F90(481,5)
         remark #15388: vectorization support: reference lulhs has aligned access
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 1.500 
         remark #15478: estimated potential speedup: 1.500 
         remark #15479: lightweight vector operations: 3 
         remark #15488: --- end vector loop cost summary ---
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at lapack_wrap.F90(481,5)
      <Remainder>
         remark #25015: Estimate of max trip count of loop=12
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lapack_wrap.F90(482,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lapack_wrap.F90(482,5)
      remark #25401: memcopy(with guard) generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at lapack_wrap.F90(482,5)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at lapack_wrap.F90(482,5)
      <Multiversioned v2>
         remark #15388: vectorization support: reference lulhs has aligned access
         remark #15389: vectorization support: reference lhs has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 2.250 
         remark #15478: estimated potential speedup: 1.720 
         remark #15479: lightweight vector operations: 2 
         remark #15480: medium-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lapack_wrap.F90(482,5)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lapack_wrap.F90(506,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lapack_wrap.F90(508,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15452: unmasked strided loads: 1 
      remark #15459: masked indexed (or scatter) stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 99 
      remark #15477: vector loop cost: 167.500 
      remark #15478: estimated potential speedup: 0.590 
      remark #15479: lightweight vector operations: 78 
      remark #15480: medium-overhead vector operations: 4 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15482: vectorized math library calls: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(507,7)
      remark #15388: vectorization support: reference 756 has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.590 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(507,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at lapack_wrap.F90(511,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lapack_wrap.F90(513,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15452: unmasked strided loads: 1 
      remark #15459: masked indexed (or scatter) stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 103 
      remark #15477: vector loop cost: 167.500 
      remark #15478: estimated potential speedup: 0.610 
      remark #15479: lightweight vector operations: 78 
      remark #15480: medium-overhead vector operations: 4 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15482: vectorized math library calls: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(512,7)
      remark #15388: vectorization support: reference 764 has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.590 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(512,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at lapack_wrap.F90(541,7)
<Peeled>
LOOP END

LOOP BEGIN at lapack_wrap.F90(541,7)
   remark #25420: Collapsed with loop at line 541 
   remark #15388: vectorization support: reference solution has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 4.370 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at lapack_wrap.F90(541,7)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at lapack_wrap.F90(541,7)
<Remainder>
   remark #15388: vectorization support: reference solution has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lapack_wrap.F90(541,7)
<Remainder>
LOOP END

LOOP BEGIN at lapack_wrap.F90(576,20) inlined into lapack_wrap.F90(544,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lapack_wrap.F90(576,20) inlined into lapack_wrap.F90(544,12)
   <Peeled>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(576,20) inlined into lapack_wrap.F90(544,12)
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 20 
      remark #15477: vector loop cost: 5.250 
      remark #15478: estimated potential speedup: 3.530 
      remark #15479: lightweight vector operations: 15 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(576,20) inlined into lapack_wrap.F90(544,12)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at lapack_wrap.F90(549,7)
   remark #25420: Collapsed with loop at line 549 
   remark #25401: memcopy(with guard) generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lapack_wrap.F90(549,7)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(549,7)
   <Multiversioned v2>
      remark #15388: vectorization support: reference solution has aligned access
      remark #15389: vectorization support: reference rhs has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.250 
      remark #15478: estimated potential speedup: 1.720 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(549,7)
   <Remainder, Multiversioned v2>
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(549,7)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at lapack_wrap.F90(553,7)
<Peeled>
LOOP END

LOOP BEGIN at lapack_wrap.F90(553,7)
   remark #25420: Collapsed with loop at line 553 
   remark #15388: vectorization support: reference solution has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 4.370 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at lapack_wrap.F90(553,7)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at lapack_wrap.F90(553,7)
<Remainder>
   remark #15388: vectorization support: reference solution has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lapack_wrap.F90(553,7)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: LAPACK_WRAP::BAND_SOLVEX

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at lapack_wrap.F90(341,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lapack_wrap.F90(343,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15452: unmasked strided loads: 1 
      remark #15459: masked indexed (or scatter) stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 99 
      remark #15477: vector loop cost: 167.500 
      remark #15478: estimated potential speedup: 0.590 
      remark #15479: lightweight vector operations: 78 
      remark #15480: medium-overhead vector operations: 4 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15482: vectorized math library calls: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(342,7)
      remark #15388: vectorization support: reference 544 has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.590 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(342,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at lapack_wrap.F90(346,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lapack_wrap.F90(348,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15452: unmasked strided loads: 1 
      remark #15459: masked indexed (or scatter) stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 103 
      remark #15477: vector loop cost: 167.500 
      remark #15478: estimated potential speedup: 0.610 
      remark #15479: lightweight vector operations: 78 
      remark #15480: medium-overhead vector operations: 4 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15482: vectorized math library calls: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(347,7)
      remark #15388: vectorization support: reference 552 has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.590 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(347,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at lapack_wrap.F90(394,48)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 5.250 
   remark #15478: estimated potential speedup: 3.550 
   remark #15479: lightweight vector operations: 15 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at lapack_wrap.F90(394,48)
<Remainder>
LOOP END

LOOP BEGIN at lapack_wrap.F90(396,7)
   remark #15382: vectorization support: call to function for_write_seq_lis cannot be vectorized   [ lapack_wrap.F90(397,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ lapack_wrap.F90(397,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ lapack_wrap.F90(397,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ lapack_wrap.F90(397,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis cannot be vectorized   [ lapack_wrap.F90(398,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ lapack_wrap.F90(398,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ lapack_wrap.F90(398,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ lapack_wrap.F90(398,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between 450 line 397 and 450 line 398
   remark #15346: vector dependence: assumed OUTPUT dependence between 450 line 398 and 450 line 397
LOOP END

LOOP BEGIN at lapack_wrap.F90(576,20) inlined into lapack_wrap.F90(410,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lapack_wrap.F90(576,20) inlined into lapack_wrap.F90(410,12)
   <Peeled>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(576,20) inlined into lapack_wrap.F90(410,12)
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 20 
      remark #15477: vector loop cost: 5.250 
      remark #15478: estimated potential speedup: 3.530 
      remark #15479: lightweight vector operations: 15 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(576,20) inlined into lapack_wrap.F90(410,12)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: TRIDAG_SOLVEX

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at lapack_wrap.F90(131,48)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 5.250 
   remark #15478: estimated potential speedup: 3.550 
   remark #15479: lightweight vector operations: 15 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at lapack_wrap.F90(131,48)
<Remainder>
LOOP END

LOOP BEGIN at lapack_wrap.F90(133,7)
   remark #15382: vectorization support: call to function for_write_seq_lis cannot be vectorized   [ lapack_wrap.F90(134,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ lapack_wrap.F90(134,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ lapack_wrap.F90(134,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ lapack_wrap.F90(134,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis cannot be vectorized   [ lapack_wrap.F90(135,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ lapack_wrap.F90(135,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ lapack_wrap.F90(135,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ lapack_wrap.F90(135,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between 143 line 134 and 143 line 135
   remark #15346: vector dependence: assumed OUTPUT dependence between 143 line 135 and 143 line 134
LOOP END

LOOP BEGIN at lapack_wrap.F90(576,20) inlined into lapack_wrap.F90(147,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lapack_wrap.F90(576,20) inlined into lapack_wrap.F90(147,12)
   <Peeled>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(576,20) inlined into lapack_wrap.F90(147,12)
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 20 
      remark #15477: vector loop cost: 5.250 
      remark #15478: estimated potential speedup: 3.530 
      remark #15479: lightweight vector operations: 15 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at lapack_wrap.F90(576,20) inlined into lapack_wrap.F90(147,12)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: ADVANCE_WINDM_EDSCLRM_MODULE::ADVANCE_WINDM_EDSCLRM

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at advance_windm_edsclrm_module.F90(184,5)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at advance_windm_edsclrm_module.F90(184,5)
      remark #15388: vectorization support: reference dummy_nu has aligned access
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 3.000 
      remark #15478: estimated potential speedup: 2.660 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at advance_windm_edsclrm_module.F90(184,5)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1239,9) inlined into advance_windm_edsclrm_module.F90(189,10)
   remark #25045: Fused Loops: ( 1239 1240 )

   remark #15388: vectorization support: reference XM_GF has aligned access
   remark #15389: vectorization support: reference vg has unaligned access
   remark #15388: vectorization support: reference XM_CF has aligned access   [ advance_windm_edsclrm_module.F90(1240,9) ]
   remark #15388: vectorization support: reference vm has aligned access   [ advance_windm_edsclrm_module.F90(1240,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: FUSED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 13 
   remark #15477: vector loop cost: 17.000 
   remark #15478: estimated potential speedup: 2.800 
   remark #15479: lightweight vector operations: 10 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1240,9) inlined into advance_windm_edsclrm_module.F90(189,10)
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1239,9) inlined into advance_windm_edsclrm_module.F90(189,10)
<Remainder>
   remark #15388: vectorization support: reference XM_GF has aligned access
   remark #15389: vectorization support: reference vg has unaligned access
   remark #15388: vectorization support: reference XM_CF has aligned access   [ advance_windm_edsclrm_module.F90(1240,9) ]
   remark #15388: vectorization support: reference vm has aligned access   [ advance_windm_edsclrm_module.F90(1240,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1239,9) inlined into advance_windm_edsclrm_module.F90(189,10)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1254,7) inlined into advance_windm_edsclrm_module.F90(189,10)
   remark #15388: vectorization support: reference um_tndcy has aligned access
   remark #15388: vectorization support: reference XM_GF has aligned access
   remark #15388: vectorization support: reference XM_CF has aligned access
   remark #15388: vectorization support: reference um_forcing has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 3 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.410 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1254,7) inlined into advance_windm_edsclrm_module.F90(189,10)
<Remainder>
   remark #15388: vectorization support: reference um_tndcy has aligned access
   remark #15388: vectorization support: reference XM_GF has aligned access
   remark #15388: vectorization support: reference XM_CF has aligned access
   remark #15388: vectorization support: reference um_forcing has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1254,7) inlined into advance_windm_edsclrm_module.F90(189,10)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1265,7) inlined into advance_windm_edsclrm_module.F90(189,10)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at advance_windm_edsclrm_module.F90(1265,7) inlined into advance_windm_edsclrm_module.F90(189,10)
      remark #15388: vectorization support: reference um_tndcy has aligned access
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 3.000 
      remark #15478: estimated potential speedup: 2.660 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at advance_windm_edsclrm_module.F90(1265,7) inlined into advance_windm_edsclrm_module.F90(189,10)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1245,9) inlined into advance_windm_edsclrm_module.F90(195,10)
   remark #25045: Fused Loops: ( 1245 1246 )

   remark #15388: vectorization support: reference XM_GF has aligned access
   remark #15389: vectorization support: reference ug has unaligned access
   remark #15388: vectorization support: reference XM_CF has aligned access   [ advance_windm_edsclrm_module.F90(1246,9) ]
   remark #15388: vectorization support: reference um has aligned access   [ advance_windm_edsclrm_module.F90(1246,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: FUSED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 13 
   remark #15477: vector loop cost: 17.000 
   remark #15478: estimated potential speedup: 2.800 
   remark #15479: lightweight vector operations: 10 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1246,9) inlined into advance_windm_edsclrm_module.F90(195,10)
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1245,9) inlined into advance_windm_edsclrm_module.F90(195,10)
<Remainder>
   remark #15388: vectorization support: reference XM_GF has aligned access
   remark #15389: vectorization support: reference ug has unaligned access
   remark #15388: vectorization support: reference XM_CF has aligned access   [ advance_windm_edsclrm_module.F90(1246,9) ]
   remark #15388: vectorization support: reference um has aligned access   [ advance_windm_edsclrm_module.F90(1246,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1245,9) inlined into advance_windm_edsclrm_module.F90(195,10)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1254,7) inlined into advance_windm_edsclrm_module.F90(195,10)
   remark #15388: vectorization support: reference vm_tndcy has aligned access
   remark #15388: vectorization support: reference XM_GF has aligned access
   remark #15388: vectorization support: reference XM_CF has aligned access
   remark #15388: vectorization support: reference vm_forcing has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 3 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.410 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1254,7) inlined into advance_windm_edsclrm_module.F90(195,10)
<Remainder>
   remark #15388: vectorization support: reference vm_tndcy has aligned access
   remark #15388: vectorization support: reference XM_GF has aligned access
   remark #15388: vectorization support: reference XM_CF has aligned access
   remark #15388: vectorization support: reference vm_forcing has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1254,7) inlined into advance_windm_edsclrm_module.F90(195,10)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1265,7) inlined into advance_windm_edsclrm_module.F90(195,10)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at advance_windm_edsclrm_module.F90(1265,7) inlined into advance_windm_edsclrm_module.F90(195,10)
      remark #15388: vectorization support: reference vm_tndcy has aligned access
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 3.000 
      remark #15478: estimated potential speedup: 2.660 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at advance_windm_edsclrm_module.F90(1265,7) inlined into advance_windm_edsclrm_module.F90(195,10)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(205,5)
   remark #15388: vectorization support: reference um has aligned access   [ advance_windm_edsclrm_module.F90(205,23) ]
   remark #15388: vectorization support: reference vm has aligned access   [ advance_windm_edsclrm_module.F90(205,23) ]
   remark #15388: vectorization support: reference wind_speed has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 66 
   remark #15477: vector loop cost: 51.000 
   remark #15478: estimated potential speedup: 4.430 
   remark #15479: lightweight vector operations: 21 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(205,5)
<Remainder>
   remark #15388: vectorization support: reference um has aligned access   [ advance_windm_edsclrm_module.F90(205,23) ]
   remark #15388: vectorization support: reference vm has aligned access   [ advance_windm_edsclrm_module.F90(205,23) ]
   remark #15388: vectorization support: reference wind_speed has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(205,5)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(210,5)
   remark #25401: memcopy(with guard) generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at advance_windm_edsclrm_module.F90(210,5)
   <Multiversioned v2>
      remark #15388: vectorization support: reference rhs has aligned access
      remark #15388: vectorization support: reference 1487 has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 5.330 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at advance_windm_edsclrm_module.F90(210,5)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(221,5)
   remark #25401: memcopy(with guard) generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at advance_windm_edsclrm_module.F90(221,5)
   <Multiversioned v2>
      remark #15389: vectorization support: reference rhs has unaligned access
      remark #15388: vectorization support: reference 1501 has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.750 
      remark #15478: estimated potential speedup: 2.270 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at advance_windm_edsclrm_module.F90(221,5)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(236,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between 1 line 1657 and upwp line 236
   remark #15346: vector dependence: assumed FLOW dependence between upwp line 236 and 1 line 1657
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(242,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between 1 line 1657 and vpwp line 242
   remark #15346: vector dependence: assumed FLOW dependence between vpwp line 242 and 1 line 1657
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(272,5)
   remark #25401: memcopy(with guard) generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at advance_windm_edsclrm_module.F90(272,5)
   <Multiversioned v2>
      remark #15388: vectorization support: reference um has aligned access
      remark #15388: vectorization support: reference solution has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 5.330 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at advance_windm_edsclrm_module.F90(272,5)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(276,5)
   remark #25401: memcopy(with guard) generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at advance_windm_edsclrm_module.F90(276,5)
   <Multiversioned v2>
      remark #15388: vectorization support: reference vm has aligned access
      remark #15389: vectorization support: reference solution has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.250 
      remark #15478: estimated potential speedup: 3.170 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at advance_windm_edsclrm_module.F90(276,5)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(292,14)
   remark #15388: vectorization support: reference 1539 has aligned access
   remark #15388: vectorization support: reference um has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 30 
   remark #15477: vector loop cost: 35.000 
   remark #15478: estimated potential speedup: 3.120 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(292,14)
<Remainder>
   remark #15388: vectorization support: reference 1539 has aligned access
   remark #15388: vectorization support: reference um has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(292,14)
<Remainder>
LOOP END

LOOP BEGIN at stats_type_utilities.F90(153,5) inlined into advance_windm_edsclrm_module.F90(292,14)
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ stats_type_utilities.F90(202,11) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ stats_type_utilities.F90(201,73) ]
   remark #15382: vectorization support: call to function CLUBB_DEBUG cannot be vectorized   [ stats_type_utilities.F90(200,14) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between 3 line 195 and 3 line 195
   remark #15346: vector dependence: assumed ANTI dependence between 3 line 195 and 3 line 195
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(293,14)
   remark #15388: vectorization support: reference 1543 has aligned access
   remark #15388: vectorization support: reference vm has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 30 
   remark #15477: vector loop cost: 35.000 
   remark #15478: estimated potential speedup: 3.120 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(293,14)
<Remainder>
   remark #15388: vectorization support: reference 1543 has aligned access
   remark #15388: vectorization support: reference vm has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(293,14)
<Remainder>
LOOP END

LOOP BEGIN at stats_type_utilities.F90(153,5) inlined into advance_windm_edsclrm_module.F90(293,14)
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ stats_type_utilities.F90(202,11) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ stats_type_utilities.F90(201,73) ]
   remark #15382: vectorization support: call to function CLUBB_DEBUG cannot be vectorized   [ stats_type_utilities.F90(200,14) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between 3 line 195 and 3 line 195
   remark #15346: vector dependence: assumed ANTI dependence between 3 line 195 and 3 line 195
LOOP END

LOOP BEGIN at sponge_layer_damping.F90(337,7) inlined into advance_windm_edsclrm_module.F90(295,21)
   remark #25401: memcopy(with guard) generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at sponge_layer_damping.F90(337,7) inlined into advance_windm_edsclrm_module.F90(295,21)
   <Multiversioned v2>
      remark #15389: vectorization support: reference 1547 has unaligned access
      remark #15388: vectorization support: reference XM has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.750 
      remark #15478: estimated potential speedup: 1.440 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at sponge_layer_damping.F90(337,7) inlined into advance_windm_edsclrm_module.F90(295,21)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at sponge_layer_damping.F90(338,7) inlined into advance_windm_edsclrm_module.F90(295,21)
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15460: masked strided loads: 3 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 68 
   remark #15477: vector loop cost: 106.000 
   remark #15478: estimated potential speedup: 2.410 
   remark #15479: lightweight vector operations: 15 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at sponge_layer_damping.F90(338,7) inlined into advance_windm_edsclrm_module.F90(295,21)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at sponge_layer_damping.F90(338,7) inlined into advance_windm_edsclrm_module.F90(295,21)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(295,7)
   remark #25401: memcopy(with guard) generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at advance_windm_edsclrm_module.F90(295,7)
   <Multiversioned v2>
      remark #15388: vectorization support: reference um has aligned access
      remark #15388: vectorization support: reference 1547 has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 5.330 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at advance_windm_edsclrm_module.F90(295,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at sponge_layer_damping.F90(337,7) inlined into advance_windm_edsclrm_module.F90(297,21)
   remark #25401: memcopy(with guard) generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at sponge_layer_damping.F90(337,7) inlined into advance_windm_edsclrm_module.F90(297,21)
   <Multiversioned v2>
      remark #15389: vectorization support: reference 1561 has unaligned access
      remark #15388: vectorization support: reference XM has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.750 
      remark #15478: estimated potential speedup: 1.440 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at sponge_layer_damping.F90(337,7) inlined into advance_windm_edsclrm_module.F90(297,21)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at sponge_layer_damping.F90(338,7) inlined into advance_windm_edsclrm_module.F90(297,21)
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15460: masked strided loads: 3 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 68 
   remark #15477: vector loop cost: 106.000 
   remark #15478: estimated potential speedup: 2.410 
   remark #15479: lightweight vector operations: 15 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at sponge_layer_damping.F90(338,7) inlined into advance_windm_edsclrm_module.F90(297,21)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at sponge_layer_damping.F90(338,7) inlined into advance_windm_edsclrm_module.F90(297,21)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(297,7)
   remark #25401: memcopy(with guard) generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at advance_windm_edsclrm_module.F90(297,7)
   <Multiversioned v2>
      remark #15388: vectorization support: reference vm has aligned access
      remark #15388: vectorization support: reference 1561 has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 5.330 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at advance_windm_edsclrm_module.F90(297,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(300,14)
   remark #15388: vectorization support: reference 1575 has aligned access
   remark #15388: vectorization support: reference um has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 30 
   remark #15477: vector loop cost: 35.000 
   remark #15478: estimated potential speedup: 3.120 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(300,14)
<Remainder>
   remark #15388: vectorization support: reference 1575 has aligned access
   remark #15388: vectorization support: reference um has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(300,14)
<Remainder>
LOOP END

LOOP BEGIN at stats_type_utilities.F90(252,5) inlined into advance_windm_edsclrm_module.F90(300,14)
   remark #15382: vectorization support: call to function STAT_UPDATE_VAR_PT cannot be vectorized   [ stats_type_utilities.F90(289,14) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ stats_type_utilities.F90(293,77) ]
   remark #15382: vectorization support: call to function CLUBB_DEBUG cannot be vectorized   [ stats_type_utilities.F90(293,14) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between K line 253 and K line 255
   remark #15346: vector dependence: assumed FLOW dependence between K line 255 and K line 253
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(301,14)
   remark #15388: vectorization support: reference 1579 has aligned access
   remark #15388: vectorization support: reference vm has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 30 
   remark #15477: vector loop cost: 35.000 
   remark #15478: estimated potential speedup: 3.120 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(301,14)
<Remainder>
   remark #15388: vectorization support: reference 1579 has aligned access
   remark #15388: vectorization support: reference vm has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(301,14)
<Remainder>
LOOP END

LOOP BEGIN at stats_type_utilities.F90(252,5) inlined into advance_windm_edsclrm_module.F90(301,14)
   remark #15382: vectorization support: call to function STAT_UPDATE_VAR_PT cannot be vectorized   [ stats_type_utilities.F90(289,14) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ stats_type_utilities.F90(293,77) ]
   remark #15382: vectorization support: call to function CLUBB_DEBUG cannot be vectorized   [ stats_type_utilities.F90(293,14) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between K line 253 and K line 255
   remark #15346: vector dependence: assumed FLOW dependence between K line 255 and K line 253
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(307,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between 1 line 1657 and upwp line 307
   remark #15346: vector dependence: assumed FLOW dependence between upwp line 307 and 1 line 1657
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(311,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between 1 line 1657 and vpwp line 311
   remark #15346: vector dependence: assumed FLOW dependence between vpwp line 311 and 1 line 1657
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(319,14)
   remark #15388: vectorization support: reference 1599 has aligned access
   remark #15388: vectorization support: reference um has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 30 
   remark #15477: vector loop cost: 35.000 
   remark #15478: estimated potential speedup: 3.120 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(319,14)
<Remainder>
   remark #15388: vectorization support: reference 1599 has aligned access
   remark #15388: vectorization support: reference um has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(319,14)
<Remainder>
LOOP END

LOOP BEGIN at stats_type_utilities.F90(153,5) inlined into advance_windm_edsclrm_module.F90(319,14)
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ stats_type_utilities.F90(202,11) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ stats_type_utilities.F90(201,73) ]
   remark #15382: vectorization support: call to function CLUBB_DEBUG cannot be vectorized   [ stats_type_utilities.F90(200,14) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between 3 line 195 and 3 line 195
   remark #15346: vector dependence: assumed ANTI dependence between 3 line 195 and 3 line 195
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(322,14)
   remark #15388: vectorization support: reference 1603 has aligned access
   remark #15388: vectorization support: reference vm has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 30 
   remark #15477: vector loop cost: 35.000 
   remark #15478: estimated potential speedup: 3.120 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(322,14)
<Remainder>
   remark #15388: vectorization support: reference 1603 has aligned access
   remark #15388: vectorization support: reference vm has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(322,14)
<Remainder>
LOOP END

LOOP BEGIN at stats_type_utilities.F90(153,5) inlined into advance_windm_edsclrm_module.F90(322,14)
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ stats_type_utilities.F90(202,11) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ stats_type_utilities.F90(201,73) ]
   remark #15382: vectorization support: call to function CLUBB_DEBUG cannot be vectorized   [ stats_type_utilities.F90(200,14) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between 3 line 195 and 3 line 195
   remark #15346: vector dependence: assumed ANTI dependence between 3 line 195 and 3 line 195
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(326,7)
   remark #25045: Fused Loops: ( 326 328 )

   remark #25427: Loop Statements Reordered
   remark #15388: vectorization support: reference vm has aligned access   [ advance_windm_edsclrm_module.F90(328,7) ]
   remark #15388: vectorization support: reference vm has aligned access   [ advance_windm_edsclrm_module.F90(328,7) ]
   remark #15389: vectorization support: reference vm_ref has unaligned access   [ advance_windm_edsclrm_module.F90(328,7) ]
   remark #15388: vectorization support: reference um has aligned access
   remark #15388: vectorization support: reference um has aligned access
   remark #15389: vectorization support: reference um_ref has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: FUSED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 82 
   remark #15477: vector loop cost: 9.000 
   remark #15478: estimated potential speedup: 9.050 
   remark #15479: lightweight vector operations: 24 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(328,7)
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(326,7)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(334,14)
   remark #15388: vectorization support: reference 1611 has aligned access
   remark #15388: vectorization support: reference um has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 30 
   remark #15477: vector loop cost: 35.000 
   remark #15478: estimated potential speedup: 3.120 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(334,14)
<Remainder>
   remark #15388: vectorization support: reference 1611 has aligned access
   remark #15388: vectorization support: reference um has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(334,14)
<Remainder>
LOOP END

LOOP BEGIN at stats_type_utilities.F90(252,5) inlined into advance_windm_edsclrm_module.F90(334,14)
   remark #15382: vectorization support: call to function STAT_UPDATE_VAR_PT cannot be vectorized   [ stats_type_utilities.F90(289,14) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ stats_type_utilities.F90(293,77) ]
   remark #15382: vectorization support: call to function CLUBB_DEBUG cannot be vectorized   [ stats_type_utilities.F90(293,14) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between K line 253 and K line 255
   remark #15346: vector dependence: assumed FLOW dependence between K line 255 and K line 253
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(337,14)
   remark #15388: vectorization support: reference 1615 has aligned access
   remark #15388: vectorization support: reference vm has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 30 
   remark #15477: vector loop cost: 35.000 
   remark #15478: estimated potential speedup: 3.120 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(337,14)
<Remainder>
   remark #15388: vectorization support: reference 1615 has aligned access
   remark #15388: vectorization support: reference vm has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(337,14)
<Remainder>
LOOP END

LOOP BEGIN at stats_type_utilities.F90(252,5) inlined into advance_windm_edsclrm_module.F90(337,14)
   remark #15382: vectorization support: call to function STAT_UPDATE_VAR_PT cannot be vectorized   [ stats_type_utilities.F90(289,14) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ stats_type_utilities.F90(293,77) ]
   remark #15382: vectorization support: call to function CLUBB_DEBUG cannot be vectorized   [ stats_type_utilities.F90(293,14) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between K line 253 and K line 289
   remark #15346: vector dependence: assumed FLOW dependence between K line 289 and K line 253
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(410,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at advance_windm_edsclrm_module.F90(411,9)
      remark #25401: memcopy(with guard) generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at advance_windm_edsclrm_module.F90(411,9)
      <Multiversioned v2>
         remark #15389: vectorization support: reference rhs has unaligned access
         remark #15388: vectorization support: reference 1632 has aligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 1.750 
         remark #15478: estimated potential speedup: 2.270 
         remark #15479: lightweight vector operations: 2 
         remark #15481: heavy-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at advance_windm_edsclrm_module.F90(411,9)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(430,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between 1 line 1657 and wpedsclrp line 430
   remark #15346: vector dependence: assumed FLOW dependence between wpedsclrp line 430 and 1 line 1657

   LOOP BEGIN at advance_windm_edsclrm_module.F90(430,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between 1 line 1657 and wpedsclrp line 430
      remark #15346: vector dependence: assumed FLOW dependence between wpedsclrp line 430 and 1 line 1657
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at advance_windm_edsclrm_module.F90(430,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(439,7)
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 10.000 
   remark #15478: estimated potential speedup: 1.570 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(439,7)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(458,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at advance_windm_edsclrm_module.F90(458,7)
      remark #25401: memcopy(with guard) generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at advance_windm_edsclrm_module.F90(458,7)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at advance_windm_edsclrm_module.F90(458,7)
      <Multiversioned v2>
         remark #15388: vectorization support: reference edsclrm has aligned access
         remark #15389: vectorization support: reference solution has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 1.250 
         remark #15478: estimated potential speedup: 3.000 
         remark #15479: lightweight vector operations: 3 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at advance_windm_edsclrm_module.F90(458,7)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(463,9)
   remark #15300: LOOP WAS VECTORIZED
   remark #15460: masked strided loads: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 1.130 
   remark #15479: lightweight vector operations: 1 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(463,9)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(470,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between 1 line 1657 and wpedsclrp line 470
   remark #15346: vector dependence: assumed FLOW dependence between wpedsclrp line 470 and 1 line 1657

   LOOP BEGIN at advance_windm_edsclrm_module.F90(470,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between 1 line 1657 and wpedsclrp line 470
      remark #15346: vector dependence: assumed FLOW dependence between wpedsclrp line 470 and 1 line 1657
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at advance_windm_edsclrm_module.F90(470,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(510,7)
   remark #15382: vectorization support: call to function for_write_seq_lis cannot be vectorized   [ advance_windm_edsclrm_module.F90(511,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ advance_windm_edsclrm_module.F90(511,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ advance_windm_edsclrm_module.F90(511,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between 1240 line 511 and 1240 line 511
   remark #15346: vector dependence: assumed OUTPUT dependence between 1240 line 511 and 1240 line 511
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(518,7)
   remark #15382: vectorization support: call to function for_write_seq_lis cannot be vectorized   [ advance_windm_edsclrm_module.F90(519,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ advance_windm_edsclrm_module.F90(519,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ advance_windm_edsclrm_module.F90(519,9) ]
   remark #15382: vectorization support: call to function for_write_seq_lis_xmit cannot be vectorized   [ advance_windm_edsclrm_module.F90(519,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between 1240 line 519 and 1240 line 519
   remark #15346: vector dependence: assumed OUTPUT dependence between 1240 line 519 and 1240 line 519
LOOP END
===========================================================================

Begin optimization report for: ADVANCE_WINDM_EDSCLRM_MODULE::WINDM_EDSCLRM_RHS

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at advance_windm_edsclrm_module.F90(1513,5)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at advance_windm_edsclrm_module.F90(1513,5)
   <Peeled>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at advance_windm_edsclrm_module.F90(1513,5)
      remark #15388: vectorization support: reference rhs has aligned access
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.500 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at advance_windm_edsclrm_module.F90(1513,5)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1533,7)
   remark #15388: vectorization support: reference rhs_diff has aligned access
   remark #15388: vectorization support: reference 2280 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.680 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1533,7)
<Remainder>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1604,5)
   remark #15388: vectorization support: reference rhs_diff has aligned access
   remark #15388: vectorization support: reference 2303 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.680 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1604,5)
<Remainder>
   remark #25436: completely unrolled by 1  
LOOP END


Non-optimizable loops:


LOOP BEGIN at advance_windm_edsclrm_module.F90(1560,5)
   remark #15529: loop was not vectorized: volatile assignment was not vectorized. Try using non-volatile assignment.   [ diffusion.F90(38,23) ]
LOOP END
===========================================================================

Begin optimization report for: ADVANCE_WINDM_EDSCLRM_MODULE::WINDM_EDSCLRM_IMPLICIT_STATS..0

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at advance_windm_edsclrm_module.F90(1133,5)
   remark #15382: vectorization support: call to function STAT_UPDATE_VAR_PT cannot be vectorized   [ advance_windm_edsclrm_module.F90(1138,12) ]
   remark #15382: vectorization support: call to function STAT_UPDATE_VAR_PT cannot be vectorized   [ stats_type_utilities.F90(289,14) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ stats_type_utilities.F90(293,77) ]
   remark #15382: vectorization support: call to function CLUBB_DEBUG cannot be vectorized   [ stats_type_utilities.F90(293,14) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between 1978 line 1138 and 1978 line 1138
   remark #15346: vector dependence: assumed OUTPUT dependence between 1978 line 1138 and 1978 line 1138
LOOP END
===========================================================================

Begin optimization report for: ADVANCE_WINDM_EDSCLRM_MODULE::WINDM_EDSCLRM_IMPLICIT_STATS..1

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at advance_windm_edsclrm_module.F90(1133,5)
   remark #15382: vectorization support: call to function STAT_UPDATE_VAR_PT cannot be vectorized   [ advance_windm_edsclrm_module.F90(1138,12) ]
   remark #15382: vectorization support: call to function STAT_UPDATE_VAR_PT cannot be vectorized   [ stats_type_utilities.F90(289,14) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ stats_type_utilities.F90(293,77) ]
   remark #15382: vectorization support: call to function CLUBB_DEBUG cannot be vectorized   [ stats_type_utilities.F90(293,14) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between 1978 line 1138 and 1978 line 1138
   remark #15346: vector dependence: assumed OUTPUT dependence between 1978 line 1138 and 1978 line 1138
LOOP END
===========================================================================

Begin optimization report for: ADVANCE_WINDM_EDSCLRM_MODULE::WINDM_EDSCLRM_SOLVE

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at advance_windm_edsclrm_module.F90(1062,12)
   remark #15388: vectorization support: reference 1928 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1062,12)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1064,14)
   remark #15388: vectorization support: reference 1932 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1064,14)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1064,32)
   remark #15388: vectorization support: reference 1936 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1064,32)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1064,14)
   remark #25045: Fused Loops: ( 1064 1064 1064 )

   remark #15388: vectorization support: reference 1928 has aligned access
   remark #15388: vectorization support: reference 1932 has aligned access   [ advance_windm_edsclrm_module.F90(1064,32) ]
   remark #15388: vectorization support: reference 1936 has aligned access   [ advance_windm_edsclrm_module.F90(1064,48) ]
   remark #15301: FUSED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 3 
   remark #15462: unmasked indexed (or gather) loads: 3 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 7.500 
   remark #15478: estimated potential speedup: 1.460 
   remark #15479: lightweight vector operations: 8 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1064,32)
   remark #25046: Loop lost in Fusion 
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1064,48)
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1064,14)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1074,12)
   remark #15388: vectorization support: reference 1943 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1074,12)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1075,26)
   remark #15388: vectorization support: reference 1947 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1075,26)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1075,45)
   remark #15388: vectorization support: reference 1951 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1075,45)
<Remainder>
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1075,26)
   remark #25045: Fused Loops: ( 1075 1075 1075 )

   remark #15388: vectorization support: reference 1943 has aligned access
   remark #15388: vectorization support: reference 1947 has aligned access   [ advance_windm_edsclrm_module.F90(1075,45) ]
   remark #15388: vectorization support: reference 1951 has aligned access   [ advance_windm_edsclrm_module.F90(1075,61) ]
   remark #15301: FUSED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 3 
   remark #15462: unmasked indexed (or gather) loads: 3 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 7.500 
   remark #15478: estimated potential speedup: 1.460 
   remark #15479: lightweight vector operations: 8 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1075,45)
   remark #25046: Loop lost in Fusion 
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1075,61)
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1075,26)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: ADVANCE_WINDM_EDSCLRM_MODULE::WINDM_EDSCLRM_LHS

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at advance_windm_edsclrm_module.F90(1339,5)
   remark #25420: Collapsed with loop at line 1339 
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at advance_windm_edsclrm_module.F90(1339,5)
   <Peeled>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at advance_windm_edsclrm_module.F90(1339,5)
      remark #15388: vectorization support: reference lhs has aligned access
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.500 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at advance_windm_edsclrm_module.F90(1339,5)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at advance_windm_edsclrm_module.F90(1339,5)
      remark #25408: memset generated
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1350,9)
   remark #15389: vectorization support: reference lhs has unaligned access
   remark #15389: vectorization support: reference lhs has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 4.000 
   remark #15478: estimated potential speedup: 0.900 
   remark #15479: lightweight vector operations: 1 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1368,7)
   remark #15389: vectorization support: reference lhs has unaligned access
   remark #15389: vectorization support: reference lhs has unaligned access
   remark #15388: vectorization support: reference 2151 has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1368,7)
<Remainder>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1395,11)
   remark #15388: vectorization support: reference tmp has aligned access
   remark #15388: vectorization support: reference 2183 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.680 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at advance_windm_edsclrm_module.F90(1395,11)
<Remainder>
   remark #25436: completely unrolled by 1  
LOOP END


Non-optimizable loops:


LOOP BEGIN at advance_windm_edsclrm_module.F90(1406,5)
   remark #15529: loop was not vectorized: volatile assignment was not vectorized. Try using non-volatile assignment.   [ diffusion.F90(38,23) ]
LOOP END
===========================================================================

Begin optimization report for: INTERPOLATION::PVERTINTERP..0

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at interpolation.F90(357,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between found line 358 and found line 359
   remark #15346: vector dependence: assumed FLOW dependence between found line 359 and found line 358
   remark #15346: vector dependence: assumed ANTI dependence between found line 358 and found line 359
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at interpolation.F90(357,5)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: INTERPOLATION::PVERTINTERP..1

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at interpolation.F90(357,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between found line 358 and found line 359
   remark #15346: vector dependence: assumed FLOW dependence between found line 359 and found line 358
   remark #15346: vector dependence: assumed ANTI dependence between found line 358 and found line 359
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at interpolation.F90(357,5)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: STAT_UPDATE_VAR

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at stats_type_utilities.F90(65,7)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between grid_kind line 66 and grid_kind line 69
   remark #15346: vector dependence: assumed OUTPUT dependence between grid_kind line 69 and grid_kind line 66
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at stats_type_utilities.F90(65,7)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at stats_type_utilities.F90(65,7)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at stats_type_utilities.F90(65,7)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================
